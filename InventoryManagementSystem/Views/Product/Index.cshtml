@model List<Product>
@{
    ViewData["Title"] = "Index";
}

<form method="get" action="/Product/Index" class="mb-4">
    <div class="row g-2">
        <div class="col-md-3">
            <input type="text" name="searchText" class="form-control" placeholder="Search by name or description" value="@ViewBag.SearchText" />
        </div>
        <div class="col-md-3">
            <select name="categoryId" class="form-select">
                <option value="">-- All Categories --</option>
                @foreach (var cat in (IEnumerable<Category>)ViewBag.Categoriey)
                {
                    <option value="@cat.CategoryId" selected="@(ViewBag.CategoryId == cat.CategoryId ? "selected" : null)">@cat.Name</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <select name="supplierId" class="form-select">
                <option value="">-- All Suppliers --</option>
                @foreach (var sup in (IEnumerable<Supplier>)ViewBag.Supplier)
                {
                    <option value="@sup.SupplierId" selected="@(ViewBag.SupplierId == sup.SupplierId ? "selected" : null)">@sup.Name</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-primary w-100">Search</button>
        </div>
    </div>
</form>


<h1 class="text-center my-4">All Porducts</h1>

<div class="container">
    <div class="row g-4">
        @foreach (var item in Model)
        {
            <div class="col-md-4">
                <div class="card h-100 shadow-sm">
                    <img src="~/images/Products/@item.Image" class="card-img-top" alt="@item.Name" style="height: 220px; object-fit: cover;" />

                    <div class="card-body">
                        <h5 class="card-title">@item.Name</h5>
                        <p class="card-text">
                            <strong>ID:</strong> @item.ProductId<br />
                            <strong>Description:</strong> @item.Description<br />
                            <strong>Price:</strong> @item.Price <br />
                            <strong>Reorder Level:</strong> @item.ReorderLevel<br />
                            <strong>Stock:</strong> @item.TotalStocQuantity<br />

                            <strong>Category:</strong>
                            @{
                                var category = ((IEnumerable<Category>)ViewBag.Categoriey).FirstOrDefault(c => c.CategoryId == item.CategoryId);
                            }
                            @(category != null ? category.Name : "N/A")
                            <br />

                            <strong>Supplier:</strong>
                            @{
                                var supplier = ((IEnumerable<Supplier>)ViewBag.Supplier).FirstOrDefault(s => s.SupplierId == item.SupplierId);
                            }
                            @(supplier != null ? supplier.Name : "N/A")
                            <br />
                        </p>

                        <a href="/Product/edit/@item.ProductId" class="btn btn-warning">Edit</a>
                        <a href="#" onclick="confirmDelete(@item.ProductId)" class="btn btn-danger">Delete</a>

                    </div>
                </div>
            </div>
        }
    </div>



    <div class="text-center my-4">
        <a href="/Product/new" class="btn btn-primary">New Product</a>
    </div>
</div>

<div class="text-center my-4">
    @for (int i = 1; i <= (int)ViewBag.TotalPages; i++)
    {
        <a class="btn @(i == (int)ViewBag.CurrentPage ? "btn-primary" : "btn-outline-primary") mx-1"
           href="/Product/Index?page=@i">@i</a>
    }
</div>

<script>
    function confirmDelete(productId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "This product will be permanently deleted!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/Product/Delete/' + productId;
            }
        });
    }
</script>