@model IEnumerable<InventoryManagementSystem.Models.Category>
@{
    ViewData["Title"] = "Categories";
    var currentFilter = ViewData["CurrentFilter"] as string;
    var page = ViewBag.CurrentPage ?? 1;
    var size = ViewBag.PageSize ?? 10;
    var totalPages = ViewBag.TotalPages ?? 1;
}
<h2>Categories</h2>
<form method="get" asp-action="Index" class="mb-3 d-flex justify-content-between align-items-center">
    <div class="input-group" style="width: 300px;">
        <input type="text" name="searchString" value="@currentFilter" class="form-control" placeholder="Search categories..." />
        <button type="submit" class="btn btn-outline-secondary">Search</button>
    </div>
    <a class="btn btn-primary" href="#" id="addCategoryBtn" data-url="@Url.Action("Add", "Category")">Add Category</a>
</form>
<table class="table table-striped">
    <thead>
        <tr>
            <th>@Html.ActionLink("ID", "Index", new { sortOrder = ViewData["IdSortParam"], searchString = currentFilter })</th>
            <th>@Html.ActionLink("Name", "Index", new { sortOrder = ViewData["NameSortParam"], searchString = currentFilter })</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.CategoryId</td>
                <td>@item.Name</td>
                <td>@item.Description</td>
                <td>
                    <a class="btn btn-sm btn-warning editCategoryBtn" href="#" data-url="@Url.Action("Edit", new { id = item.CategoryId })" title="Edit">Edit</a>
                    <a class="btn btn-sm btn-danger deleteCategoryBtn" href="#" data-id="@item.CategoryId" title="Delete">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var paginationModel = new
    {
        PageNumber = page,
        TotalPages = totalPages,
        PageSize = size
    };
    await Html.RenderPartialAsync("~/Views/Shared/_PaginationControls.cshtml", paginationModel);
}

<!-- UpSert Modal -->
<div class="modal fade" id="categoryModal" tabindex="-1" aria-labelledby="categoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="categoryModalLabel">Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="categoryModalBody">
                <!-- Content will be loaded here -->
            </div>
        </div>
    </div>
</div>

<!-- Error Modal -->
<div class="modal fade" id="errorModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Error</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="errorMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            // Open Add modal
            $(document).on('click', '#addCategoryBtn', function (e) {
                e.preventDefault();
                var url = $(this).data('url');
                $('#categoryModalBody').load(url, function () {
                    $('#categoryModal').modal('show');
                });
            });

            // Open Edit modal
            $(document).on('click', '.editCategoryBtn', function (e) {
                e.preventDefault();
                var url = $(this).data('url');
                $('#categoryModalBody').load(url, function () {
                    $('#categoryModal').modal('show');
                });
            });

            // Handle form submission
            $(document).on('submit', '#categoryModalBody form', function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            $('#categoryModal').modal('hide');
                            window.location.reload();
                        } else {
                            $('#errorMessage').text(response.error);
                            $('#errorModal').modal('show');
                        }
                    },
                    error: function () {
                        $('#errorMessage').text('An error occurred while processing your request.');
                        $('#errorModal').modal('show');
                    }
                });
            });

            // Handle delete
            $(document).on('click', '.deleteCategoryBtn', function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                if (confirm('Are you sure you want to delete this category?')) {
                    $.post('@Url.Action("Delete", "Category")', { id: id, __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() })
                        .done(function () {
                            window.location.reload();
                        })
                        .fail(function () {
                            $('#errorMessage').text('Failed to delete category.');
                            $('#errorModal').modal('show');
                        });
                }
            });
        });
    </script>
}